/* osgCompute - Copyright (C) 2008-2009 SVT Group
*                                                                     
* This library is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as
* published by the Free Software Foundation; either version 3 of
* the License, or (at your option) any later version.
*                                                                     
* This library is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of 
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesse General Public License for more details.
*
* The full license is in LICENSE file included with this distribution.
*/

#ifndef OSGCUDA_PROGRAM
#define OSGCUDA_PROGRAM 1

#include <osgCompute/Program>
#include <osgCompute/Visitor>
#include <osgCuda/Export>
#include <osgViewer/ViewerBase>

//! \namespace osgCuda CUDA functionality 
/** \namespace osgCuda 
	Defines the namespace for all CUDA classes that
	implement the osgCompute interfaces for the CUDA API.
*/ 
namespace osgCuda
{
	//! Class for CUDA computations and resources.
	/** The osgCuda::Program class implements the CUDA device handling. The 
	resource handling is unchanged from osgCompute::Program. Please see 
	osgCompute::Program for the resource handling.
    */
    class LIBRARY_EXPORT Program : public osgCompute::Program
    {
    public:
		/** Constructor. 
		*/
        Program();

        META_Program( osgCuda, Program, osgCompute, ProgramBin );


    protected:
		/** Destructor will release all resources first.
		*/
        virtual ~Program();

    private:
        // copy constructor and operator should not be called
        Program( const Program&, const osg::CopyOp& ) {}
		Program &operator=(const Program &) { return *this; }

    };
}

#endif //OSGCUDA_PROGRAM
